name: nuget-publish

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Publish NuGet (msbuild)
      # You may pin to the exact commit or the version.
      # uses: MVS-Telecom/publish-nuget@12589a9f9639f10f1af2d4bc63165b159efda8ab
      uses: MVS-Telecom/publish-nuget@test8
      with:
        # Use `msbuild` instead of `dotnet`
        # USE_MSBUILD: # optional
        # Filepath of the project to be packaged, relative to root of repository
        PROJECT_FILE_PATH: src/Serials/Serials.csproj
        # NuGet package id, used for version detection & defaults to project name
        PACKAGE_NAME: Serials # optional
        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        # VERSION_FILE_PATH: # optional
        # Regex pattern to extract version info in a capturing group
        VERSION_REGEX: <AssemblyVersion>(.*)<\/AssemblyVersion> # optional, default is <Version>(.*)<\/Version>
        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        #VERSION_STATIC: # optional
        # Flag to toggle git tagging, enabled by default
        # TAG_COMMIT: # optional, default is true
        # Format of the git tag, [*] gets replaced with actual version
        # TAG_FORMAT: # optional, default is v*
        # API key to authenticate with NuGet server
        NUGET_KEY: ${{secrets.NUGET_API_KEY}} # optional
        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        # NUGET_SOURCE: # optional, default is https://api.nuget.org
        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        # INCLUDE_SYMBOLS: # optional
